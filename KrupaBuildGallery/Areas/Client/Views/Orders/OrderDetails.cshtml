@using KrupaBuildGallery.Helper;
@using KrupaBuildGallery.Model;
@using KrupaBuildGallery.ViewModel;
@model  KrupaBuildGallery.ViewModel.OrderVM

@{
    List<PaymentHistoryVM> lstpayments = ViewData["lstPaymentHist"] as List<PaymentHistoryVM>;
    ViewBag.Title = "Order Detail";
    decimal SubTotl = 0;
    decimal NetTotal = 0;
    bool IsFree = Model.HasFreeItems;
    bool HasPrmo = Model.HasPromo;
}

<style>
    .label-wrapper {
        display: table;
        float: right;
        min-height: 28px;
    }

    .form-horizontal .form-group {
        margin-right: -15px;
        margin-left: -15px;
    }

        .form-horizontal .form-group:before {
            content: " ";
            display: table
        }

        .form-horizontal .form-group:after {
            clear: both !important
        }

    .form-horizontal .label-wrapper .control-label {
        display: table-cell;
        font-weight: bold;
    }

    .form-text-row {
        /*padding-top: 6px;*/
    }

    .col-md-3 {
        float: left;
    }

    @@media(max-width: 992px) {
        .form-horizontal .label-wrapper {
            float: none;
            margin-bottom: 3px;
            margin-top: 5px
        }
    }
</style>
<!-- breadcrumb start -->
<div class="breadcrumb-section">
    <div class="container">
        <div class="row">
            <div class="col-sm-6">
                <div class="page-title">
                    <h2>Order Detail</h2>
                </div>
            </div>
            <div class="col-sm-6">
                <nav aria-label="breadcrumb" class="theme-breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="/orders">Order</a></li>
                        <li class="breadcrumb-item active">Order Detail</li>
                    </ol>
                </nav>
            </div>
        </div>
    </div>
</div>
<!-- breadcrumb End -->
<!--section start-->
<section class="section-b-space">
    <div class="container">
        <div class="row">
            <div class="col-sm-12">
                <div class="card">
                    <div class="card-header">
                        <h5>Order Detail</h5>
                    </div>
                    <div class="card-body form-horizontal">
                        <div class="form-group">
                            <div class="col-md-3">
                                <div class="label-wrapper"><label class="control-label">Order #:</label></div>
                            </div>
                            <div class="col-md-9">
                                <div class="form-text-row">@Model.OrderId</div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <div class="label-wrapper"><label class="control-label">Order Type:</label></div>
                            </div>
                            <div class="col-md-9">
                                @if (Model.OrderTypeId == 1)
                                {
                                    <div class="form-text-row">First Cart</div>
                                }
                                else
                                {
                                    <div class="form-text-row">Second Cart</div>
                                }

                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <div class="label-wrapper"><label class="control-label">Created On:</label></div>
                            </div>
                            <div class="col-md-9">
                                <div class="form-text-row">@Model.OrderDate.ToString("MMM dd,yyyy hh:mm:ss")</div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <div class="label-wrapper"><label class="control-label">Customer:</label></div>
                            </div>
                            <div class="col-md-9">
                                <div class="form-text-row">@Model.ClientUserName</div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <div class="label-wrapper"><label class="control-label">Order Status:</label></div>
                            </div>
                            <div class="col-md-9">
                                <div class="form-text-row">@Model.OrderStatus</div>
                                @if (Model.OrderStatusId != 3)
                                {
                                    <button type="button" name="" id="cancelorder" class="btn bg-red" style="margin-right: 3px;display:none;" onclick="cancelorder('@Model.OrderId');">
                                        Cancel order
                                    </button>
                                }
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <div class="label-wrapper"><label class="control-label">Payment Method:</label></div>
                            </div>
                            <div class="col-md-9">
                                <div class="form-text-row">@Model.PaymentType</div>
                            </div>
                        </div>
                        @if (Model.WalletAmtUsed > 0)
                        {
                            <div class="form-group">
                                <div class="col-md-3">
                                    <div class="label-wrapper"><label class="control-label">Wallet Amount Used:</label></div>
                                </div>
                                <div class="col-md-9">
                                    <div class="form-text-row">₹ @Model.WalletAmtUsed</div>
                                </div>
                            </div>
                        }
                        @if (Model.CreditUsed > 0)
                        {
                            <div class="form-group">
                                <div class="col-md-3">
                                    <div class="label-wrapper"><label class="control-label">Credit Amount Used:</label></div>
                                </div>
                                <div class="col-md-9">
                                    <div class="form-text-row">₹ @Model.CreditUsed</div>
                                </div>
                            </div>
                        }
                        <div class="form-group" style="border-bottom: 1px solid #eff2f7;">
                            <div class="col-md-3">
                                <div class="label-wrapper"><label class="control-label">Order Total Amount:</label></div>
                            </div>
                            <div class="col-md-9">
                                @{
                                    decimal OrderTotalAmt = Model.OrderAmount + Model.ExtraAmount + Model.ShipmentCharge;
                                    double OrderRoundedAmt = CommonMethod.GetRoundValue(Convert.ToDouble(OrderTotalAmt)); }
                                <div class="form-text-row">₹ @OrderRoundedAmt</div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <div class="label-wrapper"><label class="control-label">Shipping Address:</label></div>
                            </div>
                            <div class="col-md-9">
                                <div class="form-text-row"></div>
                            </div>
                        </div>
                        <br />
                        <div class="form-group">
                            <div class="col-md-3">
                                <div class="label-wrapper"><label class="control-label">Name:</label></div>
                            </div>
                            <div class="col-md-9">
                                <div class="form-text-row">@Model.OrderShipClientName</div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <div class="label-wrapper"><label class="control-label">Phone:</label></div>
                            </div>
                            <div class="col-md-9">
                                <div class="form-text-row">@Model.OrderShipClientPhone</div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <div class="label-wrapper"><label class="control-label">Address:</label></div>
                            </div>
                            <div class="col-md-9">
                                <div class="form-text-row">@Model.OrderShipAddress</div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <div class="label-wrapper"><label class="control-label">City:</label></div>
                            </div>
                            <div class="col-md-9">
                                <div class="form-text-row">@Model.OrderShipCity</div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <div class="label-wrapper"><label class="control-label">Pincode:</label></div>
                            </div>
                            <div class="col-md-9">
                                <div class="form-text-row">@Model.OrderPincode</div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <div class="label-wrapper"><label class="control-label">State:</label></div>
                            </div>
                            <div class="col-md-9">
                                <div class="form-text-row">@Model.OrderShipState</div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <div class="label-wrapper"><label class="control-label">Shipping Charge:</label></div>
                            </div>
                            <div class="col-md-9">
                                @if (Model.ShippingStatus == 1 && Model.ShipmentCharge != 0)
                                {
                                    <button type="button" name="" id="payshipcharge" onclick="makepaymentship('@Model.OrderId');" class="btn bg-red" style="margin-right: 3px;background-color: #bbc5ff;border-radius: 20px;">
                                        Pay Shipping Charge - ₹ @Model.ShipmentCharge
                                    </button>
                                }
                                else
                                {
                                    <div class="form-text-row">₹ @Model.ShipmentCharge</div>
                                }
                            </div>
                        </div>
                        @if (Model.OrderAmountDue > 0)
                        {
                            <div class="form-group">
                                <div class="col-md-3">
                                    <div class="label-wrapper"><label class="control-label">Amount Due to Pay:</label></div>
                                </div>
                                <div class="col-md-9">
                                    @if (Model.IsCashOnDelivery == true)
                                    {
                                        <span>Due Amount - ₹ @Model.OrderAmountDue</span>
                                    }
                                    else
                                    {
                                        <button type="button" name="" id="makepayment" onclick="makepayment('@Model.OrderAmountDue', '@Model.OrderId');" class="btn bg-red" style="margin-right: 3px;background-color: #bbc5ff;border-radius: 20px;">
                                            Pay Due Amount - ₹ @Model.OrderAmountDue
                                        </button>
                                    }

                                </div>
                            </div>
                        }

                        <div class="form-group">
                            <div class="col-md-3">
                                <div class="label-wrapper"><label class="control-label">Remarks:</label></div>
                            </div>
                            <div class="col-md-9">
                                <div class="form-text-row">@Model.Remarks</div>
                            </div>
                        </div>
                    </div>
                    <input type="hidden" id="hdnHasFreeItems" value='@IsFree.ToString()' />
                    <input type="hidden" id="hdnHasPromo" value='@HasPrmo.ToString()' />
                    <input type="hidden" id="hdnorderid" value="@Model.OrderId" />
                    <div class="card-header">
                        <h5>Order Items</h5>
                    </div>
                    <div class="card-body">
                        <div class="card-body vendor-table" style="overflow-x:auto;">
                            <table class="table cart-table table-responsive-xs">
                                <thead>
                                    <tr class="table-head">
                                        <th>Picture</th>
                                        <th>Product Item Name</th>
                                        <th>Sku</th>
                                        <th>Price</th>
                                        <th>Quantity</th>
                                        <th>Point Discount</th>
                                        <th>GST</th>
                                        <th>Total</th>
                                        <th>Status</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model.OrderItems != null && Model.OrderItems.Count > 0)
                                    {
                                        for (int jidx = 0; jidx < Model.OrderItems.Count; jidx++)
                                        {
                                            KrupaBuildGallery.ViewModel.OrderItemsVM objorderItem = Model.OrderItems[jidx];
                                            decimal Totl = objorderItem.FinalAmt;  // Math.Round((objorderItem.Price * objorderItem.Qty) - objorderItem.Discount + objorderItem.GSTAmt, 2);
                                            SubTotl = SubTotl + Totl;
                                            string stauscolor = "badge-secondary";

                                            if (objorderItem.ItemStatus == 1)
                                            {
                                                stauscolor = "badge-danger";
                                            }
                                            else if (objorderItem.ItemStatus == 2)
                                            {
                                                stauscolor = "badge-success";
                                            }
                                            else if (objorderItem.ItemStatus == 3)
                                            {
                                                stauscolor = "badge-warning";
                                            }
                                            else if (objorderItem.ItemStatus == 4)
                                            {
                                                stauscolor = "badge-info";
                                            }
                                            else if (objorderItem.ItemStatus == 5)
                                            {
                                                stauscolor = "badge-primary";
                                            }
                                            else if (objorderItem.ItemStatus == 6)
                                            {
                                                stauscolor = "badge-sample1";
                                            }
                                            else if (objorderItem.ItemStatus == 7)
                                            {
                                                stauscolor = "badge-sample2";
                                            }
                                            if (objorderItem.IsCombo == true && objorderItem.IsMainItem)
                                            {
                                                <tr>
                                                    <td colspan="3">
                                                        <b>Combo: @objorderItem.ComboName</b>
                                                    </td>
                                                    <td>
                                                        @objorderItem.Price
                                                    </td>
                                                    <td>
                                                        @objorderItem.ComboQty
                                                    </td>
                                                    <td>₹ @objorderItem.Discount</td>
                                                    <td>₹ @objorderItem.GSTAmt</td>
                                                    <td>₹ @objorderItem.FinalAmt</td>
                                                    <td><span class="badge @stauscolor">@objorderItem.ItemStatustxt</span></td>
                                                    <td>
                                                        @if (((objorderItem.ItemStatus == 1 || objorderItem.ItemStatus == 2) && Model.OrderTypeId == 1 && Model.HasFreeItems == false && Model.HasPromo == false) || objorderItem.ItemStatus == 4)
                                                        {
                                                            <a href="javascript:void(0)" onclick="itemaction('@objorderItem.OrderItemId','@Model.OrderTypeId','@objorderItem.ItemStatus','@objorderItem.IsReturnable.ToString()','true');"><i class="fa fa-wrench font-success"></i></a>
                                                        }

                                                        @if (objorderItem.ItemStatus != 1 && objorderItem.ItemStatus != 2 && objorderItem.ItemStatus != 3 && objorderItem.ItemStatus != 5)
                                                        {
                                                            <a href="javascript:void(0)" onclick="ratingreview('@objorderItem.OrderItemId');" style="margin-left:15px;">Rate it</a>
                                                        }
                                                        @if (objorderItem.IsDeleted == true && (objorderItem.ItemStatus == 5 || objorderItem.ItemStatus == 6 || objorderItem.ItemStatus == 8))
                                                        {
                                                            <a href="javascript:void(0);" onclick="invoiceprintItem('@objorderItem.OrderItemId','@objorderItem.OrderId');" title="Print Invoice"><i class="fa fa-file font-success"></i></a>
                                                        }
                                                    </td>
                                                </tr>
                                            }
                                            <tr>
                                                <td>
                                                    @if (!string.IsNullOrEmpty(objorderItem.ItemImg))
                                                    {
                                                        if (File.Exists(Server.MapPath("~/Images/ProductItemMedia/" + objorderItem.ItemImg)))
                                                        {
                                                            <img src="~/Images/ProductItemMedia/@objorderItem.ItemImg" alt="" class="img-fluid img-40 blur-up lazyloaded" style="width: 40px; height:40px;" />
                                                        }
                                                        else
                                                        {
                                                            <img src="@ErrorMessage.DefaultImagePath" alt="" class="img-fluid img-40 blur-up lazyloaded" style="width: 40px; height: 40px;" />
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <img src="@ErrorMessage.DefaultImagePath" alt="" class="img-fluid img-40 blur-up lazyloaded" style="width: 40px; height: 40px;" />
                                                    }
                                                </td>
                                                <td>@objorderItem.ItemName - @objorderItem.VariantQtytxt</td>
                                                <td>@objorderItem.Sku</td>
                                                <td>₹ @Math.Round(objorderItem.Price, 2)</td>
                                                <td>@objorderItem.Qty</td>
                                                <td>₹ @objorderItem.Discount</td>
                                                <td>₹ @objorderItem.GSTAmt</td>
                                                @if (objorderItem.IsCombo == false)
                                                {
                                                    <td>₹ @Totl</td>
                                                    <td><span class="badge @stauscolor">@objorderItem.ItemStatustxt</span></td>
                                                    <td>
                                                        @if (((objorderItem.ItemStatus == 1 || objorderItem.ItemStatus == 2) && Model.OrderTypeId == 1 && Model.HasFreeItems == false && Model.HasPromo == false) || objorderItem.ItemStatus == 4)
                                                        {
                                                            <a href="javascript:void(0)" onclick="itemaction('@objorderItem.OrderItemId','@Model.OrderTypeId','@objorderItem.ItemStatus','@objorderItem.IsReturnable.ToString()','false');"><i class="fa fa-wrench font-success"></i></a>
                                                        }

                                                        @if (objorderItem.ItemStatus != 1 && objorderItem.ItemStatus != 2 && objorderItem.ItemStatus != 3 && objorderItem.ItemStatus != 5)
                                                        {
                                                            <a href="javascript:void(0)" onclick="ratingreview('@objorderItem.OrderItemId');" style="margin-left:15px;">Rate it</a>
                                                        }
                                                        @if (objorderItem.IsDeleted == true && (objorderItem.ItemStatus == 5 || objorderItem.ItemStatus == 6 || objorderItem.ItemStatus == 8))
                                                        {
                                                            <a href="javascript:void(0);" onclick="invoiceprintItem('@objorderItem.OrderItemId','@objorderItem.OrderId');" title="Print Invoice"><i class="fa fa-file font-success"></i></a>
                                                        }
                                                    </td>
                                                }
                                                else
                                                {
                                                    <td colspan="3">
                                                    </td>
                                                }



                                            </tr>
                                        }

                                    }
                                    @{
                                        decimal NetTotals = Math.Round(Model.OrderAmount + Model.ShipmentCharge + Model.ExtraAmount, 2);
                                        double RoundAmtTotl = CommonMethod.GetRoundValue(Convert.ToDouble(NetTotals));
                                        double RoundedAmtTotl = CommonMethod.GetRoundedValue(Convert.ToDouble(NetTotals));
                                        decimal subtotl = Model.OrderAmount;
                                        if (Model.HasPromo)
                                        {
                                            subtotl = subtotl + Model.PromoDiscount;
                                        }
                                    }
                                    <tr>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td>Sub Total</td>

                                        <td>₹ @subtotl</td>
                                        <td></td>
                                        <td></td>
                                    </tr>
                                    @if (Model.HasPromo)
                                    {
                                        <tr>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td>Promo Discount</td>
                                            <td>₹ @Model.PromoDiscount</td>
                                            <td></td>
                                            <td></td>
                                        </tr>
                                    }
                                    <tr>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td>Shipping Charge</td>
                                        <td>₹ @Model.ShipmentCharge</td>
                                        <td></td>
                                        <td></td>
                                    </tr>
                                    @if (Model.ExtraAmount > 0)
                                    {
                                        <tr>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td>Extra Amount</td>
                                            <td>₹ @Model.ExtraAmount</td>
                                            <td></td>
                                            <td></td>
                                        </tr>
                                    }

                                    <tr>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td>Total Net Amount</td>
                                        <td>₹ @NetTotals</td>
                                        <td></td>
                                        <td></td>
                                    </tr>
                                    <tr>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td>Round Off</td>
                                        <td>₹ @RoundedAmtTotl</td>
                                        <td></td>
                                        <td></td>
                                    </tr>
                                    <tr>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td>Total Net Pay Amount</td>
                                        <td>₹ @RoundAmtTotl</td>
                                        <td></td>
                                        <td></td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div class="card-header">
                        <h5>Payment History</h5>
                    </div>
                    <div class="card-body">
                        <div class="card-body vendor-table" style="overflow-x:auto;">
                            <table class="table cart-table table-responsive-xs">
                                <thead>
                                    <tr class="table-head">
                                        <th>Payment Date</th>
                                        <th>Payment Mode</th>
                                        <th>Payment Amount</th>
                                        <th>Payment Amount Due</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (lstpayments != null && lstpayments.Count > 0)
                                    {
                                        foreach (KrupaBuildGallery.ViewModel.PaymentHistoryVM objpaymnt in lstpayments)
                                        {
                                            <tr>
                                                <td>@objpaymnt.PaymentDate.ToString("MMM dd,yyyy")</td>
                                                <td>@objpaymnt.Paymentthrough</td>
                                                <td>₹ @Math.Round(objpaymnt.AmountPaid, 2)</td>
                                                <td>₹ @Math.Round(objpaymnt.AmountDue, 2)</td>
                                                <td>
                                                    <a href="javascript:void(0)" onclick="printReceipt('@objpaymnt.PaymentHistoryId')"><i class="fa fa-print font-success"></i></a>
                                                </td>
                                            </tr>
                                        }
                                    }
                                    else
                                    {
                                        <tr>
                                            <td colspan="5" style="text-align:center;">
                                                No Payment History...
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<input type="hidden" id="hdnotptxt" value="" />
<div class="modal fade open" id="paymentmodel" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Make Payment</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            </div>
            <div class="modal-body  payment-box">
                <label>Due Amount</label><input type="number" id="amountdue" readonly value="@Model.OrderAmountDue" class="form-control" />
                <label>Enter Amount to Pay</label><input type="number" id="amountopay" value="" class="form-control" onblur="changedpayamt();" />
                <span class="field-validation-valid text-danger" id="errormsgamountpaid"></span>
                <br/>
                <span>Payment By</span>
                <ul style="margin-top:15px;" class="payment-options">
                    <li id="liwalt">
                        <div class="radio-option">
                            <input type="checkbox" name="payment-group" data-attrblns="0" style="padding-left: 5px;" value="Bywallet" id="payment-3">
                            <label for="payment-3" style="padding-left: 5px;"><span id="cuuwalt" ></span><span id="wltamtused"></span></label>
                        </div>
                    </li>
                    <li>
                        <div class="radio-option">
                            <input type="checkbox" name="payment-group" data-attrblns="0" style="padding-left: 5px;" value="ByOther" id="payment-2">
                            <label for="payment-2" style="padding-left: 5px;">Online Payments <span id="onlinepymt"></span><span class="small-text" style="display:none;">Select to pay by credit card, upi, net banking etc</span></label>
                        </div>
                    </li>
                </ul>               
            </div>
            <div class="modal-footer">
                <input type="hidden" id="hdnOrderidsforpaymemt" />
                <input type="hidden" value="0" id="hdnwaltamtcurr" />
                <input type="hidden" value="0" id="hdnWaltUsed" />
                <input type="hidden" value="0" id="hdnOnlinUsed" />
                <button data-dismiss="modal" class="btn btn-danger" type="button" onclick="$('#hdnotptxt').val('');$('#otptxt').val('');">Close</button>
                <button class="btn btn-primary" type="button" onclick="makepaymentdue();">Make Payment</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade open" id="itemactionmodal" tabindex="-1" role="dialog" aria-labelledby="itemactionmodal" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Item Return/Replace/Cancel/Exchange</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            </div>
            <div class="modal-body">
                <span>Please select from below if you want cancel, replace, return or exchange item.</span>
                <select id="itmstatusselect" class="form-control">
                    <option value="0">Select Option</option>
                    <option value="5">Cancel</option>
                    <option value="6">Return</option>
                    <option value="7">Replace</option>
                    <option value="8">Exchange</option>
                </select>
                <label>Reason</label>
                <textarea class="form-control" id="txtresn"></textarea>
            </div>
            <div class="modal-footer">
                <input type="hidden" id="hdnOrdritmid" />
                <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                <button class="btn btn-primary" type="button" onclick="takeactionforitem();">Take Action</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade open" id="ratingsmodel" tabindex="-1" role="dialog" aria-labelledby="ratingsmodel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Ratings</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            </div>
            <div class="modal-body">

            </div>
            <div class="modal-footer">
                <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                <button class="btn btn-primary" type="button" onclick="SaveRatingReview();">Save</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade open" id="otpmodal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Otp For Take Action Of Item</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true" onclick="$('#hdnotptxt').val('');$('#otptxt').val('');">&times;</button>
            </div>
            <div class="modal-body">
                <label>Enter Otp from Registered Mobile</label><input type="text" id="otptxt" value="" class="form-control" />
            </div>
            <div class="modal-footer">
                <input type="hidden" id="hdnDeleteProductItem" />
                <button data-dismiss="modal" class="btn btn-danger" type="button" onclick="$('#hdnotptxt').val('');$('#otptxt').val('');">Close</button>
                <button class="btn btn-primary" type="button" onclick="submitotpforitem();">Submit</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade open" id="shipchargemodel" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Shipping Charge Payment</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            </div>
            <div class="modal-body  payment-box">
                <label>Due Amount</label><input type="number" id="amountdue1" readonly value="@Model.ShipmentCharge" class="form-control" />               
                <span class="field-validation-valid text-danger" id="errormsgamountpaid1"></span>
                <br />
                <span>Payment By</span>
                <ul style="margin-top:15px;" class="payment-options">
                    <li id="liwalt1">
                        <div class="radio-option">
                            <input type="checkbox" name="payment-group1" data-attrblns="0" style="padding-left: 5px;" value="Bywallet" id="payment-31">
                            <label for="payment-31" style="padding-left: 5px;"><span id="cuuwalt1"></span><span id="wltamtused1"></span></label>
                        </div>
                    </li>
                    <li>
                        <div class="radio-option">
                            <input type="checkbox" name="payment-group1" data-attrblns="0" style="padding-left: 5px;" value="ByOther" id="payment-21">
                            <label for="payment-21" style="padding-left: 5px;">Online Payments <span id="onlinepymt1"></span><span class="small-text" style="display:none;">Select to pay by credit card, upi, net banking etc</span></label>
                        </div>
                    </li>
                </ul>
            </div>
            <div class="modal-footer">
                <input type="hidden" id="hdnOrderidsforshippaymemt" />
                <input type="hidden" value="0" id="hdnwaltamtcurr1" />
                <input type="hidden" value="0" id="hdnWaltUsed1" />
                <input type="hidden" value="0" id="hdnOnlinUsed1" />
                <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                <button class="btn btn-primary" type="button" onclick="makepaymentdueship();">Make Payment</button>
            </div>
        </div>
    </div>
</div>
<div style="display: none;" id="dvPrint">
</div>
<!--section end-->
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
    var rlid = '@Model.ClientRoleId';
    var options = {
        "key": "@ViewBag.key", // Enter the Key ID generated from the Dashboard
        "amount": "@ViewBag.Amount", // Amount is in currency subunits. Default currency is INR. Hence, 50000 means 50000 paise or ₹500.
        "currency": "INR",
        "name": "Shopping & Saving",
        "description": "@ViewBag.Description",
        "image": "https://razorpay.com/favicon.png",
        "order_id": "@ViewBag.OrderId",// Replace this with the order_id created using Orders API (https://razorpay.com/docs/api/orders).
        "handler": function (response) {
            StartLoading();
            SaveShippingCharge(response.razorpay_payment_id, response.razorpay_order_id, response.razorpay_signature,'@Model.OrderId');
        },
        "prefill": {
            "name": "@clsClientSession.FirstName @clsClientSession.LastName",
            "email": "@clsClientSession.Email",
            "contact": "@clsClientSession.MobileNumber"
        },
        "notes": {
            "address": "note value"
        },
        "theme": {
            "color": "#F37254"
        }
    };

    if ($("#rzp-placeorder").length > 0) {
        $(document).on('click', '#rzp-placeorder', function (e) {
          var rzp1 = new Razorpay(options);
                    rzp1.open();
                    e.preventDefault();

        });
    }

    function SaveShippingCharge(razorpymentid, razororderid, razorsignature, orderid) {
           var URL = '@Url.Action("SaveShippingCharge", "Orders")';
    jQuery.ajax({
        type: 'POST',
        async: true,
        url: URL + "?razorpymentid=" + razorpymentid + "&razororderid=" + razororderid + "&razorsignature=" + razorsignature + "&orderid=" + orderid + "&paymentbywallet=" + $("#hdnWaltUsed1").val() + "&paymentbyonline=" + $("#hdnOnlinUsed1").val(),
        success: function (result) {
            if (result == "Success") {
                msgdisplay("Shipping Charge Paid Successfully..");
                location.reload();
            }
            else {
                 msgdisplay("Problem in payment. Please contact to support");
            }

        },
        error: function (resultData) {
            debugger;
            console.log("error");

        }
     });
   }

    function cancelorder(orderid) {
         var URL = '@Url.Action("CancelOrder", "Orders")';
     jQuery.ajax({
        type: 'POST',
        async: true,
        url: URL + "?orderid=" + orderid,
        success: function (result) {
            if (result == "Success") {
                msgdisplay("Shipping Charge Paid Successfully..");
                location.reload();
            }
            else {
                 msgdisplay("Problem in payment. Please contact to support");
            }

        },
        error: function (resultData) {
            debugger;
            console.log("error");

        }
    });
    }
     function printReceipt(paymmentid) {
           $("#dvPrint").load('/client/orders/GenerateReceipt?PaymentId='+paymmentid, function () {
            w = window.open();
            w.document.write($("#dvPrint").html());
               setTimeout(function () {
                   w.print();
                   w.close();
               },50);

        });
    }

    function makepayment(dueamount, orderid) {
          var URL = '@Url.Action("GetWallletAmt", "Orders")';
        jQuery.ajax({
            type: 'GET',
            async: true,
            url: URL,
            success: function (result) {
                $("#hdnwaltamtcurr").val(result);
                $("#paymentmodel").modal("show");
                $("#amountopay").val(dueamount);
                if (parseFloat(result) <= 0) {
                    $("#liwalt").hide();
                }
                $("#cuuwalt").html("By Wallet(Balance:₹" + result + ")");
                $("#hdnOrderidsforpaymemt").val(orderid);
                $("#payment-3").attr("data-attrblns", result);
                $("#payment-2").prop("checked", true).trigger("change");
            },
            error: function (resultData) {
                StopLoading();
                console.log("error");

            }
        });

    }

    function makepaymentship(orderid) {
          var URL = '@Url.Action("GetWallletAmt", "Orders")';
        jQuery.ajax({
            type: 'GET',
            async: true,
            url: URL,
            success: function (result) {
                $("#hdnwaltamtcurr1").val(result);
                $("#shipchargemodel").modal("show");                
                if (parseFloat(result) <= 0) {
                    $("#liwalt1").hide();
                }
                $("#cuuwalt1").html("By Wallet(Balance:₹" + result + ")");
                $("#hdnOrderidsforshippaymemt").val(orderid);
                $("#payment-31").attr("data-attrblns", result);
                $("#payment-21").prop("checked", true).trigger("change");
            },
            error: function (resultData) {
                StopLoading();
                console.log("error");

            }
        });

    }

    function makepaymentdue() {
          var amtdue = parseFloat($("#amountdue").val());
        if ($("#amountopay").val().trim() == "" || parseFloat($("#amountopay").val()) <= 0) {
            $("#errormsgamountpaid").show();
            $("#errormsgamountpaid").html("Please enter amount to pay more than 0");
            return;
        }
        else if (parseFloat($("#amountopay").val()) > amtdue) {
            $("#errormsgamountpaid").show();
            $("#errormsgamountpaid").html("Amount to pay is more than due amount");
            return;
        }

        if ($("#hdnOnlinUsed").val() != "0" && !$("#payment-2").is(":checked")) {
            alert("Please select online payment");
            return;
        }

        if ($("#payment-2").is(":checked") && $("#hdnOnlinUsed").val() != "0") {
            $.ajax({
                url: '@Url.Action("CreateRazorPaymentOrder", "Orders")',
                type: "post",
                dataType: "html",
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify({ Amount: $("#hdnOnlinUsed").val(), description: "Payments Order No. " + $("#hdnOrderidsforshippaymemt").val(), AmountPayByWallet: $("#hdnWaltUsed1").val() }), //add parameter
                success: function (data) {
                    //success
                    $('.dvrazorpayscript').html(data); //populate the tab content.

                },
                error: function () {
                    alert("error");
                }
            });
        }
        else {
            SaveShippingCharge("","","");
        }
    }

     function MakepaymentSave(razorpymentid, razororderid, razorsignature) {
           var URL = '@Url.Action("MakePayment", "Orders")';
    jQuery.ajax({
        type: 'POST',
        async: true,
        url: URL + "?razorpymentid=" + razorpymentid + "&razororderid=" + razororderid + "&razorsignature=" + razorsignature + "&orderid=" + $("#hdnOrderidsforpaymemt").val() + "&amount=" + $("#amountopay").val() + "&paymentbywallet=" + $("#hdnWaltUsed").val() + "&paymentbyonline=" + $("#hdnOnlinUsed").val(),
        success: function (result) {
            if (result == "Success") {
                msgdisplay("Payment Successfully..");
                location.reload();
            }
            else {
                 msgdisplay("Problem in payment. Please contact to support");
            }

        },
        error: function (resultData) {
            debugger;
            console.log("error");

        }
     });
    }

    function makepaymentdueship() {
        var amtdue = parseFloat($("#amountdue1 ").val());

        if ($("#hdnOnlinUsed1").val() != "0" && !$("#payment-21").is(":checked")) {
            alert("Please select online payment");
            return;
        }

        if ($("#payment-21").is(":checked") && $("#hdnOnlinUsed1").val() != "0") {
            $.ajax({
                url: '@Url.Action("CreateRazorPaymentOrderForShipCharge", "Orders")',
                type: "post",
                dataType: "html",
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify({ Amount: $("#hdnOnlinUsed1").val(), description: "Payments Order No. " + $("#hdnOrderidsforpaymemt").val(), AmountPayByWallet: $("#hdnWaltUsed").val() }), //add parameter
                success: function (data) {
                    //success
                    $('.dvrazorpayscriptship').html(data); //populate the tab content.

                },
                error: function () {
                    alert("error");
                }
            });
        }
        else {
            SaveShippingCharge("", "", "", $("#hdnOrderidsforshippaymemt").val());
        }
    }

    function itemaction(ordritmid, ordertypeid, itmstatusid, isreturnable, iscombo) {
        var hsFree = $("#hdnHasFreeItems").val().toLowerCase();
        var hspromo = $("#hdnHasPromo").val().toLowerCase();

        if (isreturnable != "True" || itmstatusid != "4" || ordertypeid == "2" || iscombo == 'true' || hsFree == 'true' || hspromo == 'true' || rlid == '2') {
            $("#itmstatusselect option[value=6]").hide();
        }
        else {
            $("#itmstatusselect option[value=6]").show();
        }

        if ((itmstatusid == "1" || itmstatusid == "2") && ordertypeid != "2" && rlid != '2') {
            $("#itmstatusselect option[value=5]").show();
        }
        else {
            $("#itmstatusselect option[value=5]").hide();
        }

        if (itmstatusid == "4" && ordertypeid == "1") {
            $("#itmstatusselect option[value=7]").show();
            if (iscombo == 'true' || hsFree == 'true' || hspromo == 'true' ||  rlid == '2') {
                $("#itmstatusselect option[value=8]").hide();
            }
            else {
                $("#itmstatusselect option[value=8]").show();
            }

        }
        else {
            $("#itmstatusselect option[value=7]").hide();
            $("#itmstatusselect option[value=8]").hide();
        }
        if (itmstatusid == "4" && ordertypeid == "2") {
              $("#itmstatusselect option[value=7]").show();
        }
        $("#itmstatusselect").val("0");
        $("#hdnOrdritmid").val(ordritmid);
        $("#txtresn").val("");
        $("#itemactionmodal").modal("show");

    }

    function takeactionforitem() {
        if ($("#itmstatusselect").val() == "0") {
            alert("Please select action option for item");
            return;
        }
        if ($("#txtresn").val().trim() == "") {
            alert("Please enter reason for above action");
            return;
        }
          if ($('#hdnotptxt').val() == "") {
               var URL = '@Url.Action("SendOTPForItemAction", "Orders")';
               $.ajax({
                type: 'POST',
                async: true,
                url: URL,
                success: function (result) {
                    if (result == "InvalidNumber") {
                        alert("Mobile Number is invalid");
                        return false;
                    }
                    else {
                        $('#hdnotptxt').val(result);
                        $("#otpmodal").modal();
                    }
                },
                error: function (resultData) {
                }
            });
                return false;
         }

    }

     function submitotpforitem() {
        if ($("#otptxt").val() == "" || $("#otpemiltxt").val() == "") {
            alert("Please enter otp");
            return false;
        }

        if ($("#otptxt").val() != $('#hdnotptxt').val()) {
             alert("Invalid Mobile OTP");
            return false;
        }
         var ststuid = $("#itmstatusselect").val();
         var ordritmid = $("#hdnOrdritmid").val();
         var strreson = encodeURIComponent($("#txtresn").val());

         $("#otpmodal").modal('hide');
         $("#itemactionmodal").modal("hide");

          StartLoading();
          var URL = '@Url.Action("SaveItemAction", "Orders")';
        jQuery.ajax({
        type: 'POST',
        async: true,
        url: URL + "?orderitemid=" + ordritmid + "&status=" + ststuid+"&reason="+strreson ,
        success: function (result) {
            if (result == "Success") {
                location.reload();
            }
            else if (result == "Can Not Cancel")
            {
                alert("Item can not be cancel.");
                 location.reload();
            }
            else {
            }
               StopLoading();
        },
        error: function (resultData) {
            StopLoading();
            console.log("error");

        }
     });

    }

    function ratingreview(orderdetailid) {
        $("#ratingsmodel .modal-body").load('@Url.Action("GetRatingReview", "Orders")' + '?OrderDetailId=' + orderdetailid, function() {
            $("#ratingsmodel").modal("show");
        });
    }
    function SaveRatingReview() {
        if ($("#ratings").rateit('value') == 0) {
            alert("Please Give Rating");
            return;
        }


         var rtvl = $("#ratings").rateit('value');
         var ordritmid = $("#hdnOrderDetailsItmId").val();
         var review = encodeURIComponent($("#txtreview").val());

         $("#ratingsmodel").modal("hide");

          StartLoading();
          var URL = '@Url.Action("SaveRatingReview", "Orders")';
        jQuery.ajax({
        type: 'POST',
        async: true,
        url: URL + "?OrderDetailsId=" + ordritmid + "&rating=" + rtvl+"&review="+review ,
        success: function (result) {
            if (result == "Success") {
                alert("Rating/Review Submitted Successfully");
            }
            else {
            }
               StopLoading();
        },
        error: function (resultData) {
            StopLoading();
            console.log("error");

        }
     });

    }

    function invoiceprintItem(orderiddetailitm, orderid) {
        $("#dvPrint").load('/client/orders/PrintInvoiceOrderItem?OrderItemId=' + orderiddetailitm + '&OrderId=' + orderid, function () {
            w = window.open();
            w.document.write($("#dvPrint").html());
            setTimeout(function () {
                $("#dvPrint").html("");
                w.print();
                w.close();
            }, 100);
        });
    }

</script>
<div class="dvrazorpayscript">

</div>
<div class="dvrazorpayscriptship">

</div>
<script>

    function changedpayamt() {
        $("input[name=payment-group]").prop("checked", false).trigger("change");
        $("#payment-2").prop("checked", true).trigger("change");
    }
     $(document).on("change", 'input[name=payment-group]', function () {
         var ordeamt = parseFloat($("#amountopay").val());
        var wallamt = 0;
        var isfullothr = false;
        if ($("#payment-3").length > 0) {
            wallamt = parseFloat($("#payment-3").attr("data-attrblns"));
        }
       
        if ($(this).val() == "Bywallet" && $(this).is(":checked")) {
            if (parseFloat($(this).attr("data-attrblns")) >= ordeamt) {
                $("input[name=payment-group]").not(this).prop("checked", false);
                isfullothr = true;
                $("#onlinepymt").html("₹ 0");
            }
        }
        
        if ($(this).val() == "ByOther" && $(this).is(":checked")) {
            if (parseFloat($(this).attr("data-attrblns")) == 0) {
                $("input[name=payment-group]").not(this).prop("checked", false);
                $("#onlinepymt").html("₹ "+ordeamt);
            }
        }

        var onlinepymnt = getOnlinePrice(wallamt,ordeamt);
        if (onlinepymnt < 0) {
            onlinepymnt = 0;
            $("#payment-2").prop("checked", false);
        }
        $("#onlinepymt").html("₹" + onlinepymnt);
        $("#payment-2").attr("data-attrblns", onlinepymnt);
         $("#hdnOnlinUsed").val(onlinepymnt);
        
    });


    function getOnlinePrice(wltamt,ordeamt) {
        var amtttl = 0;
        var wltused = 0;
        var reminord = ordeamt;
        $("#wltamtused").html("₹" + wltused);
        if ($("#payment-3").length > 0 && $("#payment-3").is(":checked")) {
            amtttl = wltamt + amtttl;
            if (wltamt < reminord) {
                reminord = reminord - wltamt;
                wltused = wltamt;
            }
            else {
                wltused = ordeamt;
            }
        }

        var onlinpy = ordeamt - amtttl;
        if (onlinpy < 0) {

        }
        $("#hdnWaltUsed").val(wltused.toFixed(2));
        $("#wltamtused").html("₹" + wltused.toFixed(2));

        return onlinpy.toFixed(2);
    }

    $(document).on("change", 'input[name=payment-group1]', function () {
        var ordeamt = parseFloat($("#amountdue1 ").val());
        var wallamt = 0;
        var isfullothr = false;
        if ($("#payment-31").length > 0) {
            wallamt = parseFloat($("#payment-31").attr("data-attrblns"));
        }

        if ($(this).val() == "Bywallet" && $(this).is(":checked")) {
            if (parseFloat($(this).attr("data-attrblns")) >= ordeamt) {
                $("input[name=payment-group1]").not(this).prop("checked", false);
                isfullothr = true;
                $("#onlinepymt1").html("₹ 0");
            }
        }

        if ($(this).val() == "ByOther" && $(this).is(":checked")) {
            if (parseFloat($(this).attr("data-attrblns")) == 0) {
                $("input[name=payment-group1]").not(this).prop("checked", false);
                $("#onlinepymt1").html("₹ " + ordeamt);
            }
        }

        var onlinepymnt = getOnlinePrice1(wallamt, ordeamt);
        if (onlinepymnt < 0) {
            onlinepymnt = 0;
            $("#payment-2").prop("checked", false);
        }
        $("#onlinepymt1").html("₹" + onlinepymnt);
        $("#payment-21").attr("data-attrblns", onlinepymnt);
        $("#hdnOnlinUsed1").val(onlinepymnt);

    });


    function getOnlinePrice1(wltamt, ordeamt) {
        var amtttl = 0;
        var wltused = 0;
        var reminord = ordeamt;
        $("#wltamtused1").html("₹" + wltused);
        if ($("#payment-31").length > 0 && $("#payment-31").is(":checked")) {
            amtttl = wltamt + amtttl;
            if (wltamt < reminord) {
                reminord = reminord - wltamt;
                wltused = wltamt;
            }
            else {
                wltused = ordeamt;
            }
        }

        var onlinpy = ordeamt - amtttl;
        if (onlinpy < 0) {

        }
        $("#hdnWaltUsed1").val(wltused.toFixed(2));
        $("#wltamtused1").html("₹" + wltused.toFixed(2));

        return onlinpy.toFixed(2);
    }
</script>