@model SubProductVM

@{
    ViewBag.Title = "Product";
}

<div class="page-body">

    <!-- Container-fluid starts-->
    <div class="container-fluid">
        <div class="page-header">
            <div class="row">
                <div class="col">
                    <div class="page-header-left">
                        <h3>
                            Add Sub Product
                        </h3>
                    </div>
                </div>
                <div class="col-lg-6">
                    <ol class="breadcrumb pull-right">
                        <li class="breadcrumb-item"><a href="/admin/dashboard"><i data-feather="home"></i></a></li>
                        <li class="breadcrumb-item"><a href="/admin/subproduct">Sub Product</a></li>
                        <li class="breadcrumb-item active">Add Sub Product</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>
    <!-- Container-fluid Ends-->
    <!-- Container-fluid starts-->
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-12">
                <div class="card">
                    <div class="card-header">
                        <h5>Add Sub Product</h5>
                    </div>
                    <div class="card-body">
                        @using (Html.BeginForm("Add", "SubProduct", FormMethod.Post, new { @id = "SubProductFormId", @class = "needs-validation", enctype = "multipart/form-data", role = "form" }))
                        {

                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="form-group row">
                                @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "col-xl-3 col-md-4" })
                                @Html.DropDownListFor(model => model.CategoryId, new SelectList(Model.CategoryList, "Value", "Text"), "- Select Category -", new { @class = "form-control col-md-8", style = "" })
                                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.ProductId, htmlAttributes: new { @class = "col-xl-3 col-md-4" })
                                @Html.DropDownListFor(model => model.ProductId, new SelectList(Model.ProductList, "Value", "Text"), "- Select Product -", new { @class = "form-control col-md-8", style = "" })
                                @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.SubProductName, htmlAttributes: new { @class = "col-xl-3 col-md-4" })
                                @Html.EditorFor(model => model.SubProductName, new { htmlAttributes = new { @class = "form-control col-md-8", style = "width:350px;", @placeholder = "Enter Sub Product Name", maxlength = "200" } })
                                @Html.ValidationMessageFor(model => model.SubProductName, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.SubProductImageFile, htmlAttributes: new { @class = "col-xl-3 col-md-4" })
                                @Html.TextBoxFor(model => model.SubProductImageFile, new { type = "file", @class = "form-control col-md-8" })
                                @Html.ValidationMessageFor(model => model.SubProductImageFile, "", new { @class = "text-danger" })
                            </div>

                            <button type="submit" class="btn btn-primary">Submit</button>
                            <button type="button" class="btn btn-danger" id="btnCancel">Cancel</button>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Container-fluid Ends-->

</div>

<script src="~/Content/assets/js/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script>

    $(document).on("click", "#btnCancel", function () {
        window.location.href = "/admin/subproduct";
    });

    jQuery(document).on("change", "#CategoryId", function () {

        var CategoryId = jQuery("#CategoryId option:selected").val();

        if (CategoryId != "" && CategoryId != null) {

            StartLoading();
            var URL = '@Url.Action("GetProductListByCategoryId", "SubProduct")';
            $.ajax({
                type: 'GET',
                async: true,
                url: URL + "/" + CategoryId,
                success: function (result) {
                    var htmlData = "<option>-Select Product-</option>";
                    if (result && result.length > 0) {
                        result.forEach(element => {
                           htmlData += "<option value='"+ element.Value +"'> "+ element.Text +" </option>";
                        });
                    }
                    $("#ProductId").html(htmlData);
                    StopLoading();
                },
                error: function (error) {
                    $.unblockUI();
                }
            });
        }
    });

</script>

