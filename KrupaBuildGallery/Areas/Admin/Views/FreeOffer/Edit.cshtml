@model FreeOfferVM
@{
    ViewBag.Title = "Add Combo Offer";
}

<div class="page-body">

    <!-- Container-fluid starts-->
    <div class="container-fluid">
        <div class="page-header">
            <div class="row">
                <div class="col">
                    <div class="page-header-left">
                        <h3>
                            Edit Free Offer
                        </h3>
                    </div>
                </div>
                <div class="col-lg-6">
                    <ol class="breadcrumb pull-right">
                        <li class="breadcrumb-item"><a href="/admin/dashboard"><i data-feather="home"></i></a></li>
                        <li class="breadcrumb-item"><a href="/admin/freeoffer">Free Offer</a></li>
                        <li class="breadcrumb-item active">Edit Free Offer</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>
    <!-- Container-fluid Ends-->
    <!-- Container-fluid starts-->
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-12">
                <div class="card">
                    <div class="card-header">
                        <h5>Edit Combo Offer</h5>
                    </div>
                    <div class="card-body">
                        @using (Html.BeginForm("Edit", "FreeOffer", FormMethod.Post, new { @id = "FreeOfferFormId", @class = "needs-validation", enctype = "multipart/form-data", role = "form" }))
                        {

                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group row">
                                @Html.LabelFor(model => model.OrderAmountFrom, htmlAttributes: new { @class = "col-xl-3 col-md-4" })
                                @Html.EditorFor(model => model.OrderAmountFrom, new { htmlAttributes = new { @class = "form-control col-md-4", @placeholder = "Enter Order Start Price", maxlength = "150" } })

                                <lable class="col-xl-3 col-md-4"></lable>
                                @Html.ValidationMessageFor(model => model.OrderAmountFrom, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group row">
                                @Html.LabelFor(model => model.OrderAmountTo, htmlAttributes: new { @class = "col-xl-3 col-md-4" })
                                @Html.EditorFor(model => model.OrderAmountTo, new { htmlAttributes = new { @class = "form-control col-md-4", @placeholder = "Enter Order End Price", maxlength = "150" } })

                                <lable class="col-xl-3 col-md-4"></lable>
                                @Html.ValidationMessageFor(model => model.OrderAmountTo, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group row">
                                @Html.LabelFor(model => model.OfferStartDateStr, htmlAttributes: new { @class = "col-xl-3 col-md-4" })
                                @Html.EditorFor(model => model.OfferStartDateStr, new { htmlAttributes = new { @class = "form-control col-md-8 clsDatePicker", @placeholder = "DD/MM/YYY", @readonly = "readonly" } })

                                <lable class="col-xl-3 col-md-4"></lable>
                                @Html.ValidationMessageFor(model => model.OfferStartDateStr, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.OfferEndDateStr, htmlAttributes: new { @class = "col-xl-3 col-md-4" })
                                @Html.EditorFor(model => model.OfferEndDateStr, new { htmlAttributes = new { @class = "form-control col-md-8 clsDatePicker", @placeholder = "DD/MM/YYY", @readonly = "readonly" } })

                                <lable class="col-xl-3 col-md-4"></lable>
                                @Html.ValidationMessageFor(model => model.OfferEndDateStr, "", new { @class = "text-danger" })
                            </div>
                            <div id="SubItems">
                                @Html.Action("GetSubItemsOfFreeEdit", "FreeOffer", new { FreeOfferId = Model.FreeOfferId })
                            </div>
                            <div class="row" style="margin-top:20px;">
                                <div class="col-sm-8"></div>
                                <div class="col-sm-4"><a href="javascript:void(0)" onclick="AddSubItem();" style="font-size: 15px;font-weight: bold;">Add Item</a></div>
                            </div>


                            <div class="form-group row">
                                @Html.HiddenFor(x => x.FreeOfferId)
                                <lable class="col-xl-3 col-md-4"></lable>
                                <button type="button" class="btn btn-primary" style="margin-right:10px;" onclick="validateandsubmit();">Submit</button>
                                <button type="button" class="btn btn-danger" id="btnCancel">Cancel</button>
                            </div>

                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Container-fluid Ends-->

</div>

<script src="~/Content/assets/js/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script>
    var jid = 0;
    $(document).on("click", "#btnCancel", function () {
        window.location.href = "/admin/freeoffer";
    });

    function AddSubItem() {
        jid = jid + 1;
            $("#SubItems").append($("<div class='dvsubitm_"+jid+"'>").load('@Url.Action("GetSubItemsOfFree", "FreeOffer")' + '?Id=' + jid, function () {

        }));
    }

    function removesubitem(idds) {
        $(".dvsubitm_" + idds).remove();
    }

    function validateandsubmit() {
        var flgisvalid = true;
        $("select[name=SubItemProductItem]").each(function () {
            var idss = $(this).attr("data-id");
            if ($(this).val() == "" || $(this).val() == "0") {
                $(this).siblings(".field-validation-valid").html("Select Item");
                flgisvalid = false;
            }
            else {
                $(this).siblings(".field-validation-valid").html("");
            }
            if ($("#VarintItem_" + idss).val() == "" || $("#VarintItem_" + idss).val() == "0") {
                $("#VarintItem_" + idss).siblings(".field-validation-valid").html("Select Variant");
                flgisvalid = false;
            }
            else {
                $("#VarintItem_" + idss).siblings(".field-validation-valid").html("");
            }
            if ($("#Qty_" + idss).val() == "" || $("#Qty_" + idss).val() == "0") {
                $("#Qty_" + idss).siblings(".field-validation-valid").html("Enter Qty More than 0");
                flgisvalid = false;
            }
            else {
                $("#Qty_" + idss).siblings(".field-validation-valid").html("");
            }
        });

        if (flgisvalid == true) {
            $("#FreeOfferFormId").submit();
        }

    }

</script>

